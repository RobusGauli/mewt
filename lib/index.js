module.exports=function a(b){let g=Array.isArray(b),h=g?(p)=>[...p]:(p)=>Object.assign({},p),i=(p)=>{throw new Error(`${p?'arr':'obj'} is immutable`)},j=(p)=>(...q)=>{let r='reverse sort splice fill copyWithin'.includes(p),s='filter map concat slice'.includes(p),t=s?b:h(b),u=t[p](...q),w=r||s?a(u):u;return'push pop shift unshift'.includes(p)?[w,a(t)]:w},l={$set(p,q){let r=h(b);return r[p]=q,a(r)},$unset(p){if(g&&Number.isInteger(p)&&0<=p)return a(b.slice(0,p).concat(b.slice(p+1)));let q=h(b);return delete q[p],a(q)}};if('object'!=typeof b||!b)throw new Error('mewt accepts array or object');let n={get:(p,q)=>{return l[q]||b[q]&&({}.hasOwnProperty.call(b,q)?b[q]:j(q))}};return['setPrototypeOf','defineProperty','deleteProperty'].forEach((p)=>{n[p]=i}),b=function(q){let r=g?Object.keys:Object.getOwnPropertyNames;return r(g?[...q]:q).reduce((s,t)=>{let u=q[t];return s[t]=u&&'object'==typeof u?a(u):u,s},g?[]:{})}(b),new Proxy(b,n)};